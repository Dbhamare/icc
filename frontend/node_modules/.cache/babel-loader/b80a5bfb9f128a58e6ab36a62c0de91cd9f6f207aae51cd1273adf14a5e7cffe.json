{"ast":null,"code":"// Get the necessary DOM elements\nconst canvas = document.getElementById('whiteboard');\nconst ctx = canvas.getContext('2d');\nconst drawTool = document.getElementById('drawTool');\nconst eraseTool = document.getElementById('eraseTool');\nconst clearCanvasButton = document.getElementById('clearCanvas');\nconst colorPicker = document.getElementById('colorPicker');\n\n// Initialize drawing parameters\nlet drawing = false;\nlet erasing = false;\nlet drawingColor = '#000000'; // Default color is black\nlet lineWidth = 5; // Default line width for drawing\nlet lastX = 0;\nlet lastY = 0;\n\n// Set canvas dimensions\ncanvas.width = window.innerWidth * 0.8;\ncanvas.height = window.innerHeight * 0.7;\n\n// Set the initial stroke style (color) and line width for drawing\nctx.strokeStyle = drawingColor;\nctx.lineWidth = lineWidth;\n\n// Event listener for mouse down (start drawing or erasing)\ncanvas.addEventListener('mousedown', e => {\n  drawing = true;\n  [lastX, lastY] = [e.offsetX, e.offsetY];\n});\n\n// Event listener for mouse move (draw or erase while moving the mouse)\ncanvas.addEventListener('mousemove', e => {\n  if (!drawing) return;\n  const [currentX, currentY] = [e.offsetX, e.offsetY];\n  if (erasing) {\n    // Erase functionality\n    ctx.clearRect(currentX - lineWidth / 2, currentY - lineWidth / 2, lineWidth, lineWidth);\n  } else {\n    // Drawing functionality\n    ctx.beginPath();\n    ctx.moveTo(lastX, lastY);\n    ctx.lineTo(currentX, currentY);\n    ctx.stroke();\n    ctx.closePath();\n  }\n  [lastX, lastY] = [currentX, currentY];\n});\n\n// Event listener for mouse up (end drawing or erasing)\ncanvas.addEventListener('mouseup', () => {\n  drawing = false;\n});\n\n// Event listener for color picker\ncolorPicker.addEventListener('input', e => {\n  drawingColor = e.target.value;\n  ctx.strokeStyle = drawingColor; // Change the drawing color\n});\n\n// Event listener for draw tool\ndrawTool.addEventListener('click', () => {\n  erasing = false;\n  drawTool.classList.add('active');\n  eraseTool.classList.remove('active');\n});\n\n// Event listener for erase tool\neraseTool.addEventListener('click', () => {\n  erasing = true;\n  eraseTool.classList.add('active');\n  drawTool.classList.remove('active');\n});\n\n// Event listener for clear canvas button\nclearCanvasButton.addEventListener('click', () => {\n  ctx.clearRect(0, 0, canvas.width, canvas.height); // Clears the entire canvas\n});\n\n// Optional: Resize canvas when the window is resized\nwindow.addEventListener('resize', () => {\n  canvas.width = window.innerWidth * 0.8;\n  canvas.height = window.innerHeight * 0.7;\n  ctx.clearRect(0, 0, canvas.width, canvas.height); // Optional: Clear canvas when resizing\n});","map":{"version":3,"names":["canvas","document","getElementById","ctx","getContext","drawTool","eraseTool","clearCanvasButton","colorPicker","drawing","erasing","drawingColor","lineWidth","lastX","lastY","width","window","innerWidth","height","innerHeight","strokeStyle","addEventListener","e","offsetX","offsetY","currentX","currentY","clearRect","beginPath","moveTo","lineTo","stroke","closePath","target","value","classList","add","remove"],"sources":["/home/darshanb/icc/frontend/src/index.js"],"sourcesContent":["// Get the necessary DOM elements\nconst canvas = document.getElementById('whiteboard');\nconst ctx = canvas.getContext('2d');\nconst drawTool = document.getElementById('drawTool');\nconst eraseTool = document.getElementById('eraseTool');\nconst clearCanvasButton = document.getElementById('clearCanvas');\nconst colorPicker = document.getElementById('colorPicker');\n\n// Initialize drawing parameters\nlet drawing = false;\nlet erasing = false;\nlet drawingColor = '#000000'; // Default color is black\nlet lineWidth = 5; // Default line width for drawing\nlet lastX = 0;\nlet lastY = 0;\n\n// Set canvas dimensions\ncanvas.width = window.innerWidth * 0.8;\ncanvas.height = window.innerHeight * 0.7;\n\n// Set the initial stroke style (color) and line width for drawing\nctx.strokeStyle = drawingColor;\nctx.lineWidth = lineWidth;\n\n// Event listener for mouse down (start drawing or erasing)\ncanvas.addEventListener('mousedown', (e) => {\n  drawing = true;\n  [lastX, lastY] = [e.offsetX, e.offsetY];\n});\n\n// Event listener for mouse move (draw or erase while moving the mouse)\ncanvas.addEventListener('mousemove', (e) => {\n  if (!drawing) return;\n\n  const [currentX, currentY] = [e.offsetX, e.offsetY];\n\n  if (erasing) {\n    // Erase functionality\n    ctx.clearRect(currentX - lineWidth / 2, currentY - lineWidth / 2, lineWidth, lineWidth);\n  } else {\n    // Drawing functionality\n    ctx.beginPath();\n    ctx.moveTo(lastX, lastY);\n    ctx.lineTo(currentX, currentY);\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  [lastX, lastY] = [currentX, currentY];\n});\n\n// Event listener for mouse up (end drawing or erasing)\ncanvas.addEventListener('mouseup', () => {\n  drawing = false;\n});\n\n// Event listener for color picker\ncolorPicker.addEventListener('input', (e) => {\n  drawingColor = e.target.value;\n  ctx.strokeStyle = drawingColor; // Change the drawing color\n});\n\n// Event listener for draw tool\ndrawTool.addEventListener('click', () => {\n  erasing = false;\n  drawTool.classList.add('active');\n  eraseTool.classList.remove('active');\n});\n\n// Event listener for erase tool\neraseTool.addEventListener('click', () => {\n  erasing = true;\n  eraseTool.classList.add('active');\n  drawTool.classList.remove('active');\n});\n\n// Event listener for clear canvas button\nclearCanvasButton.addEventListener('click', () => {\n  ctx.clearRect(0, 0, canvas.width, canvas.height); // Clears the entire canvas\n});\n\n// Optional: Resize canvas when the window is resized\nwindow.addEventListener('resize', () => {\n  canvas.width = window.innerWidth * 0.8;\n  canvas.height = window.innerHeight * 0.7;\n  ctx.clearRect(0, 0, canvas.width, canvas.height); // Optional: Clear canvas when resizing\n});\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}